// *********************************************************************************************************************
// ***                                        CONFIDENTIAL --- CUSTOM STUDIOS                                        ***
// *********************************************************************************************************************
// * Auth: ColeCai                                                                                                     *
// * Date: 2023/10/31 01:14:35                                                                                         *
// * Proj: gotils                                                                                                      *
// * Pack: base100                                                                                                     *
// * File: base100.go                                                                                                  *
// *-------------------------------------------------------------------------------------------------------------------*
// * Overviews:                                                                                                        *
// *-------------------------------------------------------------------------------------------------------------------*
// * Functions:                                                                                                        *
// * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *

package base100

import (
	"github.com/caijunjun/gotils/encoding/base"
	"github.com/pkg/errors"
)

type Base100Encoding struct{}

var StdEncoding = NewBase100Encoding()

// *********************************************************************************************************************
// * SUMMARY: none.                                                                                                    *
// * WARNING: none.                                                                                                    *
// * HISTORY:                                                                                                          *
// *    -create: 2023/11/06 23:26:14 ColeCai.                                                                          *
// *********************************************************************************************************************
func NewBase100Encoding() base.IEncoding {
	return &Base100Encoding{}
}

// *********************************************************************************************************************
// * SUMMARY: none.                                                                                                    *
// * WARNING: none.                                                                                                    *
// * HISTORY:                                                                                                          *
// *    -create: 2023/10/31 01:14:43 ColeCai.                                                                          *
// *********************************************************************************************************************
func (b *Base100Encoding) Encode(src []byte) ([]byte, error) {
	buf := make([]byte, len(src)*4)
	for i, v := range src {
		buf[i*4+0] = 0xf0
		buf[i*4+1] = 0x9f
		buf[i*4+2] = byte((uint16(v)+55)/64 + 0x8f)
		buf[i*4+3] = (v+55)%64 + 0x80
	}
	return buf, nil
}

// *********************************************************************************************************************
// * SUMMARY: none.                                                                                                    *
// * WARNING: none.                                                                                                    *
// * HISTORY:                                                                                                          *
// *    -create: 2023/11/06 23:26:32 ColeCai.                                                                          *
// *********************************************************************************************************************
func (b *Base100Encoding) EncodedLen(n int) int {
	return n
}

// *********************************************************************************************************************
// * SUMMARY: none.                                                                                                    *
// * WARNING: none.                                                                                                    *
// * HISTORY:                                                                                                          *
// *    -create: 2023/10/31 01:15:01 ColeCai.                                                                          *
// *********************************************************************************************************************
func (b *Base100Encoding) Decode(src []byte) ([]byte, error) {
	if len(src)%4 != 0 {
		return nil, invalidLengthError
	}
	buf := make([]byte, len(src)/4)
	for i := 0; i != len(src); i += 4 {
		if src[i+0] != 0xf0 || src[i+1] != 0x9f {
			return nil, invalidDataError
		}
		buf[i/4] = (src[i+2]-0x8f)*64 + src[i+3] - 0x80 - 55
	}
	return buf, nil
}

// *********************************************************************************************************************
// * SUMMARY: none.                                                                                                    *
// * WARNING: none.                                                                                                    *
// * HISTORY:                                                                                                          *
// *    -create: 2023/11/06 23:26:49 ColeCai.                                                                          *
// *********************************************************************************************************************
func (b *Base100Encoding) DecodedLen(n int) int {
	return n
}

var invalidLengthError = errors.New("len(data) should be divisible by 4")
var invalidDataError = errors.New("data is invalid")
